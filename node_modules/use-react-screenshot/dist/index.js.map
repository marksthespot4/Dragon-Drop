{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import { useState } from 'react'\nimport html2canvas from 'html2canvas'\n\n/**\n * @module Main_Hook\n * Hook return\n * @typedef {Array} HookReturn\n * @property {string} HookReturn[0] - image string\n * @property {string} HookReturn[1] - take screen shot string\n * @property {object} HookReturn[2] - errors\n */\n\n/**\n * hook for creating screenshot from html node\n * @returns {HookReturn}\n */\nconst useScreenshot = () => {\n  const [image, setImage] = useState(null)\n  const [error, setError] = useState(null)\n  /**\n   * convert html node to image\n   * @param {HTMLElement} node\n   */\n  const takeScreenShot = (node) => {\n    if (!node) {\n      throw new Error('You should provide correct html node.')\n    }\n    return html2canvas(node)\n      .then((canvas) => {\n        const croppedCanvas = document.createElement('canvas')\n        const croppedCanvasContext = croppedCanvas.getContext('2d')\n        // init data\n        const cropPositionTop = 0\n        const cropPositionLeft = 0\n        const cropWidth = canvas.width\n        const cropHeight = canvas.height\n\n        croppedCanvas.width = cropWidth\n        croppedCanvas.height = cropHeight\n\n        croppedCanvasContext.drawImage(\n          canvas,\n          cropPositionLeft,\n          cropPositionTop,\n        )\n\n        const base64Image = croppedCanvas.toDataURL()\n\n        setImage(base64Image)\n        return base64Image\n      })\n      .catch(setError)\n  }\n\n  return [\n    image,\n    takeScreenShot,\n    {\n      error,\n    },\n  ]\n}\n\n/**\n * creates name of file\n * @param {string} extension\n * @param  {string[]} parts of file name\n */\nconst createFileName = (extension = '', ...names) => {\n  if (!extension) {\n    return ''\n  }\n\n  return `${names.join('')}.${extension}`\n}\n\nexport { useScreenshot, createFileName }\n"],"names":["useScreenshot","useState","image","setImage","error","setError","takeScreenShot","node","Error","html2canvas","then","canvas","croppedCanvas","document","createElement","croppedCanvasContext","getContext","cropPositionTop","cropPositionLeft","cropWidth","width","cropHeight","height","drawImage","base64Image","toDataURL","createFileName","extension","names","join"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;;;;AASA;;;;;IAIMA,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBACAC,cAAQ,CAAC,IAAD,CADR;AAAA;AAAA,MACnBC,KADmB;AAAA,MACZC,QADY;;AAAA,mBAEAF,cAAQ,CAAC,IAAD,CAFR;AAAA;AAAA,MAEnBG,KAFmB;AAAA,MAEZC,QAFY;AAG1B;;;;;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/B,QAAI,CAACA,IAAL,EAAW;AACT,YAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD;;AACD,WAAOC,WAAW,CAACF,IAAD,CAAX,CACJG,IADI,CACC,UAACC,MAAD,EAAY;AAChB,UAAMC,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAtB;AACA,UAAMC,oBAAoB,GAAGH,aAAa,CAACI,UAAd,CAAyB,IAAzB,CAA7B,CAFgB;;AAIhB,UAAMC,eAAe,GAAG,CAAxB;AACA,UAAMC,gBAAgB,GAAG,CAAzB;AACA,UAAMC,SAAS,GAAGR,MAAM,CAACS,KAAzB;AACA,UAAMC,UAAU,GAAGV,MAAM,CAACW,MAA1B;AAEAV,MAAAA,aAAa,CAACQ,KAAd,GAAsBD,SAAtB;AACAP,MAAAA,aAAa,CAACU,MAAd,GAAuBD,UAAvB;AAEAN,MAAAA,oBAAoB,CAACQ,SAArB,CACEZ,MADF,EAEEO,gBAFF,EAGED,eAHF;AAMA,UAAMO,WAAW,GAAGZ,aAAa,CAACa,SAAd,EAApB;AAEAtB,MAAAA,QAAQ,CAACqB,WAAD,CAAR;AACA,aAAOA,WAAP;AACD,KAvBI,WAwBEnB,QAxBF,CAAP;AAyBD,GA7BD;;AA+BA,SAAO,CACLH,KADK,EAELI,cAFK,EAGL;AACEF,IAAAA,KAAK,EAALA;AADF,GAHK,CAAP;AAOD;AAED;;;;;;;IAKMsB,cAAc,GAAG,SAAjBA,cAAiB,GAA8B;AAAA,MAA7BC,SAA6B,uEAAjB,EAAiB;;AACnD,MAAI,CAACA,SAAL,EAAgB;AACd,WAAO,EAAP;AACD;;AAHkD,oCAAVC,KAAU;AAAVA,IAAAA,KAAU;AAAA;;AAKnD,mBAAUA,KAAK,CAACC,IAAN,CAAW,EAAX,CAAV,cAA4BF,SAA5B;AACD;;;;;"}